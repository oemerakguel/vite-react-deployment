name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  ci_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-dist
          path: dist/

  infra_provision:
    needs: ci_build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_ACCESS_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_token: ${{ secrets.AWS_ACCESS_TOKEN }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_tf_state_bucket: ${{ secrets.TF_STATE_BUCKET }}

      - name: Save EC2 IP
        id: ec2ip
        run: echo "ip=$(terraform output -raw instance_public_ip)" >> "$GITHUB_OUTPUT"

  app_deploy:
    needs: infra_provision
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-dist
          path: dist/

      - name: Fetch EC2 IP from Terraform
        run: |
          echo "INSTANCE_IP=$(terraform -chdir=terraform output -raw instance_public_ip)" >> $GITHUB_ENV

      - name: Deploy app via SCP
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem -r dist/* ubuntu@${{ env.INSTANCE_IP }}:/var/www/html/
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Restart Nginx
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ env.INSTANCE_IP }} 'sudo systemctl restart nginx'
